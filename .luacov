--- Global configuration file. Copy, customize and store in your
-- project folder as '.luacov' for project specific configuration
-- @class module
-- @name luacov.defaults
return {
  -- default filename to load for config options if not provided
  -- only has effect in 'luacov.defaults.lua'
  ['configfile'] = '.luacov',

  -- filename to store stats collected
  ['statsfile'] = 'luacov.stats.out',

  -- filename to store report
  ['reportfile'] = 'luacov.reports.out',

  -- Run reporter on completion? (won't work for ticks)
  runreport = true,

  reporter = 'cobertura',

  -- Delete stats file after reporting?
  deletestats = true,

  -- Patterns for files to include when reporting
  -- all will be included if nothing is listed
  -- (exclude overrules include, do not include
  -- the .lua extension)
  ['include'] = {
  },

  -- Patterns for files to exclude when reporting
  -- all will be included if nothing is listed
  -- (exclude overrules include, do not include
  -- the .lua extension)
  ['exclude'] = {
    'busted',
    'luassert',
    '5.1',
    'luacov$',
    'luacov.reporter$',
    'luacov.defaults$',
    'luacov.runner$',
    'luacov.stats$',
    'luacov.tick$',
    'ansicolors$',
    'copas$',
    'coxpcall$',
    'mediator$',
    'moonscript.*$',
    'socket$',
    'ngx.*$',
    'resty.*$',
    'testing/*'
    -- 'resty.redis$',
    -- 'resty.redis',
    -- 'redis',
    -- 'redis$',
    -- '/usr/local/openresty/lualib/resty',
    -- 'core.base$',
    -- 'testing/*',
    -- '/usr/local*'
  },

  cobertura = {
		-- this function will be called for each filename in the stats file
		-- the function may be used to manipulate the path before the file is
		-- processed by the report generator
		filenameparser = function(filename)
			-- do stuff with the filename here
			return filename
		end
	},

}